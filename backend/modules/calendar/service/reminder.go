package service

import (
	"backend/modules/calendar/models"
	"github.com/google/uuid"
	"gorm.io/gorm"
	"log"
	"time"
)

func GetUpcomingReminders(db *gorm.DB) ([]models.Calendar, error) {
	var upcomingEvents []models.Calendar
	now := time.Now().UTC()

	//log.Printf("üïí –õ–æ–∫–∞–ª—å–Ω–∏–π —á–∞—Å —Å–µ—Ä–≤–µ—Ä–∞: %v", now)
	//log.Printf("üåç UTC —á–∞—Å —Å–µ—Ä–≤–µ—Ä–∞: %v", now.UTC())

	err := db.
		Where("start_date - (INTERVAL '1 minute' * reminder_offset) <= ? AND reminder_sent = false AND send_email = true", now).
		Find(&upcomingEvents).Error

	if err != nil {
		log.Printf("‚ùå Database query error: %v", err)
		return nil, err
	}

	log.Printf("üìã Found %d events for reminder", len(upcomingEvents))
	return upcomingEvents, nil
}

// MarkReminderSent –ü–æ–∑–Ω–∞—á–∏—Ç–∏ –ø–æ–¥—ñ—é —è–∫ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω—É
func MarkReminderSent(db *gorm.DB, eventID uuid.UUID) error {
	return db.Model(&models.Calendar{}).
		Where("id = ?", eventID).
		Update("reminder_sent", true).Error
}
